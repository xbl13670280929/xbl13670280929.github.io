let n=document.createElement("style");n.innerHTML="",document.head.appendChild(n);import{a as e,c as t,o as a,d as l,e as o,j as d,u as i,w as c,p as s,i as r,b as p,r as m}from"./index.dfb768e2.js";const v=c();s("data-v-0676e5bc");const u={class:"note-demo-child-box"},D=r("点击子组件函数");p();var h={props:{parentData:Object},emits:["parentFn1"],setup(n,{expose:c,emit:s}){const r=e({age:99,level:"魂帝"}),p=()=>{console.log("fn2"),s("parentFn1",r)};return c({childFn1:n=>{console.log("childFn1","接收到子组件变量 parentData",n)}}),(e,c)=>{const s=t("el-button");return a(),l("div",u,[o(s,{onClick:p},{default:v((()=>[D])),_:1}),o("div",null,"childData:"+d(i(r).age)+":"+d(i(r).level),1),o("div",null,"parentData:"+d(n.parentData.id)+":"+d(n.parentData.name),1)])}},__scopeId:"data-v-0676e5bc"};const f=c();s("data-v-206963fc");const F={class:"note-example-box"},b={class:"note-demo-parent-box"};p();var x={setup(n){const c=m(null),s=e({id:11,name:"xx1"}),p=n=>{console.log("parentFn1","接收到子组件变量 childData",n)},v=()=>{console.log("fn1"),c.value.childFn1(s)};return(n,e)=>{const m=t("el-button");return a(),l("div",F,[o("div",b,[o(m,{onClick:v},{default:f((()=>[r("父组件变量:"+d(i(s).id)+":"+d(i(s).name),1)])),_:1}),o(h,{parentData:i(s),onParentFn1:p,ref:c},null,8,["parentData"])]),o("div",{class:"note-code-case"},[o("textarea",{value:"父组件 Demo01.vue\n<template>\n<el-button @click='fn1'>父组件变量:{{parentData.id}}:{{parentData.name}}</el-button>\n<Demo01Child :parentData='parentData' @parentFn1='parentFn1' ref=\"demo01ChildRef\"></Demo01Child>\n</template>\n\n<script setup>\nimport { reactive, ref } from 'vue'\nimport Demo01Child from './Demo01Child.vue'\n\nconst demo01ChildRef = ref(null);\n//父组件变量 parentData\nconst parentData = reactive({\n\tid: 11,\n\tname: 'xx1',\n});\n//供子级调用\nconst parentFn1 = (params) => {\n\tconsole.log('parentFn1', '接收到子组件变量 childData', params);\n};\nconst fn1 = () => {\n\tconsole.log('fn1');\n\t//在[父组件]调用[子组件]的 childFn1 方法\n\tdemo01ChildRef.value.childFn1(parentData);\n};\n<script>",disabled:"",style:{height:"600px"}}),o("textarea",{value:"子组件 Demo01Child.vue\n<template>\n<el-button @click='fn2'>点击子组件函数</el-button>\n<div>childData:{{childData.age}}:{{childData.level}}</div>\n<div>parentData:{{parentData.id}}:{{parentData.name}}</div>\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n//接受父组件变量:parentData\ndefineProps({\n\tparentData: Object\n});\n//接收父类函数 parentFn1\nconst $emit = defineEmits(['parentFn1']);\n//子组件变量 childData\nconst childData = reactive({\n\tage: 99,\n\tlevel: '魂帝',\n});\n//供父级调用\nconst childFn1 = (params) => {\n\tconsole.log('childFn1', '接收到子组件变量 parentData', params);\n};\nconst fn2 = () => {\n\tconsole.log('fn2');\n\t//在[子组件]调用[父组件]方法\n\t$emit('parentFn1', childData);\n};\n//将子组件的 childFn1 方法提供给父组件调用\ndefineExpose({\n\tchildFn1,\n});\n<script>\n",disabled:"",style:{height:"720px"}})])])}},__scopeId:"data-v-206963fc"};s("data-v-5d52d5a8");const g=o("div",{class:"note-title-a"},"子父通信",-1),C={class:"note-example-list-box"};p();var _={setup:n=>(n,e)=>(a(),l("div",null,[g,o("div",C,[o(x)])])),__scopeId:"data-v-5d52d5a8"};export default _;
